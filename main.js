/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("// const listsContainer = document.querySelector('[data-lists]')\nconst newListForm = document.querySelector('[data-new-list-form]')\nconst newListInput = document.querySelector('[data-new-list-input]')\nconst deleteListButton = document.querySelector('[data-delete-list-button]')\nconst listDisplayContainer = document.querySelector('[data-list-display-container]')\nconst listTitleElement = document.querySelector('[data-list-title]')\nconst listCountElement = document.querySelector('[data-list-count]')\nconst tasksContainer = document.querySelector('[data-tasks]')\nconst taskTemplate = document.getElementById('task-template')\nconst newTaskForm = document.querySelector('[data-new-task-form]')\nconst newTaskInput = document.querySelector('[data-new-task-input]')\nconst clearCompleteTasksButton = document.querySelector('[data-clear-complete-tasks-button]')\n\nconst LOCAL_STORAGE_LIST_KEY = 'task.lists'\nconst LOCAL_STORAGE_SELECTED_LIST_ID_KEY = 'task.selectedListId'\nlet lists = JSON.parse(localStorage.getItem(LOCAL_STORAGE_LIST_KEY)) || []\nlet selectedListId = localStorage.getItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY)\n\nlistsContainer.addEventListener('click', e => {\n  if (e.target.tagName.toLowerCase() === 'li') {\n    selectedListId = e.target.dataset.listId\n    saveAndRender()\n  }\n})\n\ntasksContainer.addEventListener('click', e => {\n  if (e.target.tagName.toLowerCase() === 'input') {\n    const selectedList = lists.find(list => list.id === selectedListId)\n    const selectedTask = selectedList.tasks.find(task => task.id === e.target.id)\n    selectedTask.complete = e.target.checked\n    save()\n    renderTaskCount(selectedList)\n  }\n})\n\nclearCompleteTasksButton.addEventListener('click', e => {\n  const selectedList = lists.find(list => list.id === selectedListId)\n  selectedList.tasks = selectedList.tasks.filter(task => !task.complete)\n  saveAndRender()\n})\n\ndeleteListButton.addEventListener('click', e => {\n  lists = lists.filter(list => list.id !== selectedListId)\n  selectedListId = null\n  saveAndRender()\n})\n\nnewListForm.addEventListener('submit', e => {\n  e.preventDefault()\n  const listName = newListInput.value\n  if (listName == null || listName === '') return\n  const list = createList(listName)\n  newListInput.value = null\n  lists.push(list)\n  saveAndRender()\n})\n\nnewTaskForm.addEventListener('submit', e => {\n  e.preventDefault()\n  const taskName = newTaskInput.value\n  if (taskName == null || taskName === '') return\n  const task = createTask(taskName)\n  newTaskInput.value = null\n  const selectedList = lists.find(list => list.id === selectedListId)\n  selectedList.tasks.push(task)\n  saveAndRender()\n})\n\nfunction createList(name) {\n  return { id: Date.now().toString(), name: name, tasks: [] }\n}\n\nfunction createTask(name) {\n  return { id: Date.now().toString(), name: name, complete: false }\n}\n\nfunction saveAndRender() {\n  save()\n  render()\n}\n\nfunction save() {\n  localStorage.setItem(LOCAL_STORAGE_LIST_KEY, JSON.stringify(lists))\n  localStorage.setItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY, selectedListId)\n}\n\nfunction render() {\n  clearElement(listsContainer)\n  renderLists()\n\n  const selectedList = lists.find(list => list.id === selectedListId)\n  if (selectedListId == null) {\n    listDisplayContainer.style.display = 'none'\n  } else {\n    listDisplayContainer.style.display = ''\n    listTitleElement.innerText = selectedList.name\n    renderTaskCount(selectedList)\n    clearElement(tasksContainer)\n    renderTasks(selectedList)\n  }\n}\n\nfunction renderTasks(selectedList) {\n  selectedList.tasks.forEach(task => {\n    const taskElement = document.importNode(taskTemplate.content, true)\n    const checkbox = taskElement.querySelector('input')\n    checkbox.id = task.id\n    checkbox.checked = task.complete\n    const label = taskElement.querySelector('label')\n    label.htmlFor = task.id\n    label.append(task.name)\n    tasksContainer.appendChild(taskElement)\n  })\n}\n\nfunction renderTaskCount(selectedList) {\n  const incompleteTaskCount = selectedList.tasks.filter(task => !task.complete).length\n  const taskString = incompleteTaskCount === 1 ? \"task\" : \"tasks\"\n  listCountElement.innerText = `${incompleteTaskCount} ${taskString} remaining`\n}\n\nfunction renderLists() {\n  lists.forEach(list => {\n    const listElement = document.createElement('li')\n    listElement.dataset.listId = list.id\n    listElement.classList.add(\"list-name\")\n    listElement.innerText = list.name\n    if (list.id === selectedListId) {\n      listElement.classList.add('active-list')\n    }\n    listsContainer.appendChild(listElement)\n  })\n}\n\nfunction clearElement(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild)\n  }\n}\n\nrender()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxQkFBcUIsRUFBRSxZQUFZO0FBQ3JFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdCBsaXN0c0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3RzXScpXG5jb25zdCBuZXdMaXN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5ldy1saXN0LWZvcm1dJylcbmNvbnN0IG5ld0xpc3RJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5ldy1saXN0LWlucHV0XScpXG5jb25zdCBkZWxldGVMaXN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZGVsZXRlLWxpc3QtYnV0dG9uXScpXG5jb25zdCBsaXN0RGlzcGxheUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3QtZGlzcGxheS1jb250YWluZXJdJylcbmNvbnN0IGxpc3RUaXRsZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1saXN0LXRpdGxlXScpXG5jb25zdCBsaXN0Q291bnRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGlzdC1jb3VudF0nKVxuY29uc3QgdGFza3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS10YXNrc10nKVxuY29uc3QgdGFza1RlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stdGVtcGxhdGUnKVxuY29uc3QgbmV3VGFza0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uZXctdGFzay1mb3JtXScpXG5jb25zdCBuZXdUYXNrSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uZXctdGFzay1pbnB1dF0nKVxuY29uc3QgY2xlYXJDb21wbGV0ZVRhc2tzQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtY2xlYXItY29tcGxldGUtdGFza3MtYnV0dG9uXScpXG5cbmNvbnN0IExPQ0FMX1NUT1JBR0VfTElTVF9LRVkgPSAndGFzay5saXN0cydcbmNvbnN0IExPQ0FMX1NUT1JBR0VfU0VMRUNURURfTElTVF9JRF9LRVkgPSAndGFzay5zZWxlY3RlZExpc3RJZCdcbmxldCBsaXN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxfU1RPUkFHRV9MSVNUX0tFWSkpIHx8IFtdXG5sZXQgc2VsZWN0ZWRMaXN0SWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0xJU1RfSURfS0VZKVxuXG5saXN0c0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICBpZiAoZS50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnbGknKSB7XG4gICAgc2VsZWN0ZWRMaXN0SWQgPSBlLnRhcmdldC5kYXRhc2V0Lmxpc3RJZFxuICAgIHNhdmVBbmRSZW5kZXIoKVxuICB9XG59KVxuXG50YXNrc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICBpZiAoZS50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaW5wdXQnKSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKVxuICAgIGNvbnN0IHNlbGVjdGVkVGFzayA9IHNlbGVjdGVkTGlzdC50YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gZS50YXJnZXQuaWQpXG4gICAgc2VsZWN0ZWRUYXNrLmNvbXBsZXRlID0gZS50YXJnZXQuY2hlY2tlZFxuICAgIHNhdmUoKVxuICAgIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3QpXG4gIH1cbn0pXG5cbmNsZWFyQ29tcGxldGVUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICBjb25zdCBzZWxlY3RlZExpc3QgPSBsaXN0cy5maW5kKGxpc3QgPT4gbGlzdC5pZCA9PT0gc2VsZWN0ZWRMaXN0SWQpXG4gIHNlbGVjdGVkTGlzdC50YXNrcyA9IHNlbGVjdGVkTGlzdC50YXNrcy5maWx0ZXIodGFzayA9PiAhdGFzay5jb21wbGV0ZSlcbiAgc2F2ZUFuZFJlbmRlcigpXG59KVxuXG5kZWxldGVMaXN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gIGxpc3RzID0gbGlzdHMuZmlsdGVyKGxpc3QgPT4gbGlzdC5pZCAhPT0gc2VsZWN0ZWRMaXN0SWQpXG4gIHNlbGVjdGVkTGlzdElkID0gbnVsbFxuICBzYXZlQW5kUmVuZGVyKClcbn0pXG5cbm5ld0xpc3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGUgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KClcbiAgY29uc3QgbGlzdE5hbWUgPSBuZXdMaXN0SW5wdXQudmFsdWVcbiAgaWYgKGxpc3ROYW1lID09IG51bGwgfHwgbGlzdE5hbWUgPT09ICcnKSByZXR1cm5cbiAgY29uc3QgbGlzdCA9IGNyZWF0ZUxpc3QobGlzdE5hbWUpXG4gIG5ld0xpc3RJbnB1dC52YWx1ZSA9IG51bGxcbiAgbGlzdHMucHVzaChsaXN0KVxuICBzYXZlQW5kUmVuZGVyKClcbn0pXG5cbm5ld1Rhc2tGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGUgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KClcbiAgY29uc3QgdGFza05hbWUgPSBuZXdUYXNrSW5wdXQudmFsdWVcbiAgaWYgKHRhc2tOYW1lID09IG51bGwgfHwgdGFza05hbWUgPT09ICcnKSByZXR1cm5cbiAgY29uc3QgdGFzayA9IGNyZWF0ZVRhc2sodGFza05hbWUpXG4gIG5ld1Rhc2tJbnB1dC52YWx1ZSA9IG51bGxcbiAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKVxuICBzZWxlY3RlZExpc3QudGFza3MucHVzaCh0YXNrKVxuICBzYXZlQW5kUmVuZGVyKClcbn0pXG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3QobmFtZSkge1xuICByZXR1cm4geyBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLCBuYW1lOiBuYW1lLCB0YXNrczogW10gfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVUYXNrKG5hbWUpIHtcbiAgcmV0dXJuIHsgaWQ6IERhdGUubm93KCkudG9TdHJpbmcoKSwgbmFtZTogbmFtZSwgY29tcGxldGU6IGZhbHNlIH1cbn1cblxuZnVuY3Rpb24gc2F2ZUFuZFJlbmRlcigpIHtcbiAgc2F2ZSgpXG4gIHJlbmRlcigpXG59XG5cbmZ1bmN0aW9uIHNhdmUoKSB7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMX1NUT1JBR0VfTElTVF9LRVksIEpTT04uc3RyaW5naWZ5KGxpc3RzKSlcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9DQUxfU1RPUkFHRV9TRUxFQ1RFRF9MSVNUX0lEX0tFWSwgc2VsZWN0ZWRMaXN0SWQpXG59XG5cbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgY2xlYXJFbGVtZW50KGxpc3RzQ29udGFpbmVyKVxuICByZW5kZXJMaXN0cygpXG5cbiAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKVxuICBpZiAoc2VsZWN0ZWRMaXN0SWQgPT0gbnVsbCkge1xuICAgIGxpc3REaXNwbGF5Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgfSBlbHNlIHtcbiAgICBsaXN0RGlzcGxheUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJydcbiAgICBsaXN0VGl0bGVFbGVtZW50LmlubmVyVGV4dCA9IHNlbGVjdGVkTGlzdC5uYW1lXG4gICAgcmVuZGVyVGFza0NvdW50KHNlbGVjdGVkTGlzdClcbiAgICBjbGVhckVsZW1lbnQodGFza3NDb250YWluZXIpXG4gICAgcmVuZGVyVGFza3Moc2VsZWN0ZWRMaXN0KVxuICB9XG59XG5cbmZ1bmN0aW9uIHJlbmRlclRhc2tzKHNlbGVjdGVkTGlzdCkge1xuICBzZWxlY3RlZExpc3QudGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICBjb25zdCB0YXNrRWxlbWVudCA9IGRvY3VtZW50LmltcG9ydE5vZGUodGFza1RlbXBsYXRlLmNvbnRlbnQsIHRydWUpXG4gICAgY29uc3QgY2hlY2tib3ggPSB0YXNrRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpXG4gICAgY2hlY2tib3guaWQgPSB0YXNrLmlkXG4gICAgY2hlY2tib3guY2hlY2tlZCA9IHRhc2suY29tcGxldGVcbiAgICBjb25zdCBsYWJlbCA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsJylcbiAgICBsYWJlbC5odG1sRm9yID0gdGFzay5pZFxuICAgIGxhYmVsLmFwcGVuZCh0YXNrLm5hbWUpXG4gICAgdGFza3NDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3QpIHtcbiAgY29uc3QgaW5jb21wbGV0ZVRhc2tDb3VudCA9IHNlbGVjdGVkTGlzdC50YXNrcy5maWx0ZXIodGFzayA9PiAhdGFzay5jb21wbGV0ZSkubGVuZ3RoXG4gIGNvbnN0IHRhc2tTdHJpbmcgPSBpbmNvbXBsZXRlVGFza0NvdW50ID09PSAxID8gXCJ0YXNrXCIgOiBcInRhc2tzXCJcbiAgbGlzdENvdW50RWxlbWVudC5pbm5lclRleHQgPSBgJHtpbmNvbXBsZXRlVGFza0NvdW50fSAke3Rhc2tTdHJpbmd9IHJlbWFpbmluZ2Bcbn1cblxuZnVuY3Rpb24gcmVuZGVyTGlzdHMoKSB7XG4gIGxpc3RzLmZvckVhY2gobGlzdCA9PiB7XG4gICAgY29uc3QgbGlzdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpXG4gICAgbGlzdEVsZW1lbnQuZGF0YXNldC5saXN0SWQgPSBsaXN0LmlkXG4gICAgbGlzdEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImxpc3QtbmFtZVwiKVxuICAgIGxpc3RFbGVtZW50LmlubmVyVGV4dCA9IGxpc3QubmFtZVxuICAgIGlmIChsaXN0LmlkID09PSBzZWxlY3RlZExpc3RJZCkge1xuICAgICAgbGlzdEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLWxpc3QnKVxuICAgIH1cbiAgICBsaXN0c0NvbnRhaW5lci5hcHBlbmRDaGlsZChsaXN0RWxlbWVudClcbiAgfSlcbn1cblxuZnVuY3Rpb24gY2xlYXJFbGVtZW50KGVsZW1lbnQpIHtcbiAgd2hpbGUgKGVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgIGVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5maXJzdENoaWxkKVxuICB9XG59XG5cbnJlbmRlcigpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;